library tests_vect_fp2;

use ::fields::*;
use ::vect::*;
use ::test_helpers::*;

use std::assert::assert;

pub fn fp2_tests() -> bool {
    assert(tests_add_fp2());
    // assert(tests_sub_fp2());
    true
}

fn tests_add_fp2() -> bool {
    // the function should add the "real" and "imaginary" part separately
    //2094911124722355591130592080039857597898930618341226282859888392249028304430218244612311046228146839310359642074358
    let r_1 = vec384 {
        ls: [14795151457364307190,
        6622185142386025417, 17709159039044576520, 1719961663313476946, 4148264363906786574, 980769587779429096]
    };
    //1854013830343626212433083622699305309002946726548085159596712876339371488002438401231777242990713512722976854546804
    let i_1 = vec384 {
        ls: [8306319196692453748,
        10328470218072223240, 3451314819045096133, 17542580433704256157, 9684937745078445131, 867989271079206780]
    };
    let a_1 = vec384x {
        r: r_1,
        i: i_1,
    };

    //4045376134997543930094609209908421750094711219583275861031869422142617896643947085410916305865237922018531567230463
    let r_2 = vec384 {
        ls: [16448140995118783999,
        9520526689676604696, 7916863578364318753, 8691145487628551970, 16531338352426028355, 1893914179705411585]
    };
    //4250620933501754476426212648635705132171856148319059449262917285281574574065816436709319684883958930577072278499582
    let i_2 = vec384 {
        ls: [1139524850979729662,
        10226030227531743340, 16078343496594203218, 16066350528929326807, 17232578759082026236, 1990003151713484304]
    };
    let a_2 = vec384x {
        r: r_2,
        i: i_2,
    };

    let res = add_fp2(a_1, a_2);

    // real part
    //2137877704498232127807411464212375191436759017985494258559699678267614550583327465580539722964369097290996936745034
    // i part
    //2102225208623713295441506445599106284617920054928136723527572025496914411577416973498409298745656779262154860486599
    equals_vec384(res.r, vec384 {
        ls: [17840861436405227594, 13932570320545421538, 18190348043844813573, 3171769190527316405, 15267498937862112634, 1000885149837300815]
    });
    equals_vec384(res.i, vec384 {
        ls: [14490157105303871431, 18344358934086758004, 12093983742075217651, 7922848928509318837, 3058668651980217457, 984193805145151219]
    });
    true
}

fn tests_sub_fp2() -> bool {
    // the function should subtract the "real" and "imaginary" part separately
    //2094911124722355591130592080039857597898930618341226282859888392249028304430218244612311046228146839310359642074358
    let r_1 = vec384 {
        ls: [14795151457364307190,
        6622185142386025417, 17709159039044576520, 1719961663313476946, 4148264363906786574, 980769587779429096]
    };
    //1854013830343626212433083622699305309002946726548085159596712876339371488002438401231777242990713512722976854546804
    let i_1 = vec384 {
        ls: [8306319196692453748,
        10328470218072223240, 3451314819045096133, 17542580433704256157, 9684937745078445131, 867989271079206780]
    };
    let a_1 = vec384x {
        r: r_1,
        i: i_1,
    };

    //4045376134997543930094609209908421750094711219583275861031869422142617896643947085410916305865237922018531567230463
    let r_2 = vec384 {
        ls: [16448140995118783999,
        9520526689676604696, 7916863578364318753, 8691145487628551970, 16531338352426028355, 1893914179705411585]
    };
    //4250620933501754476426212648635705132171856148319059449262917285281574574065816436709319684883958930577072278499582
    let i_2 = vec384 {
        ls: [1139524850979729662,
        10226030227531743340, 16078343496594203218, 16066350528929326807, 17232578759082026236, 1990003151713484304]
    };
    let a_2 = vec384x {
        r: r_2,
        i: i_2,
    };

    let res = sub_fp2(a_1, a_2);
    //real
    //2051944544946479054453772695867340004361102218696958307160077106230442058277109023644082369491924581329722347403682
    //i
    //1605802452063539129424660799799504333387973398168033595665853727181828564427459828965145187235770246183798848607009
    equals_vec384(res.r, vec384 {
        ls: [11749441478323386786, 17758544037936180912, 17227970034244339466, 268154136099637487, 11475773863661012130, 960654025721557376]
    });
    equals_vec384(res.i, vec384 {
        ls: [2122481288081036065, 2312581502057688476, 13255389969724526231, 8715567865189641860, 16311206838176672806, 751784737013262341]
    });
    true
}
